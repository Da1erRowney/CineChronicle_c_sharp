<?xml version="1.0" encoding="UTF-8" ?>
<Shell
    x:Class="TestProject.AppShell"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:local="clr-namespace:TestProject"
    Shell.FlyoutBehavior="Flyout">

    <!--<ShellContent
        ContentTemplate="{DataTemplate local:MainPage}"
        Route="MainPage" />-->

    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.ForegroundColor" Value="Black" />
                <Setter Property="Shell.TitleColor" Value="Black" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="Black"/>
                <Setter Property="Shell.TabBarUnselectedColor" Value="#95FFFFFF"/>
                <Setter Property="Shell.TabBarTitleColor" Value="Black"/>
            </Style>
            <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
            <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

            <!--
        Default Styles for all Flyout Items
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
        -->
            <Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="Black"></Setter>
            </Style>
            <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{x:OnPlatform UWP=Transparent, iOS=White}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!--
        Custom Style you can apply to any Flyout Item
        -->
            <Style Class="MenuItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{x:OnPlatform UWP=Transparent, iOS=White}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>
    <!-- 
       When the Flyout is visible this defines the content to display in the flyout.
       FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element    
       https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
   -->
    <!--<FlyoutItem Title="Главная страница" Icon="icon_about.png">
        <ShellContent Route="AboutPage" ContentTemplate="{DataTemplate local:MainPage}" />
    </FlyoutItem>-->
    <FlyoutItem Title="Меню" Icon="icon_about.png">
        <ShellContent Route="MainPage" ContentTemplate="{DataTemplate local:MainPage}" />
    </FlyoutItem>
    
    <MenuItem Text="Главная страница" StyleClass="MenuItemLayoutStyle" Clicked="OnMainPageClicked">
    </MenuItem>
    <MenuItem Text="Добавить еще" StyleClass="MenuItemLayoutStyle" Clicked="AddMoreContentPageClicked">
    </MenuItem>

    <!--<FlyoutItem Title="Добавить еще" Icon="icon_about.png">
        <ShellContent Route="AddMoreContentPage" ContentTemplate="{DataTemplate local:AddMoreContentPage}" />
    </FlyoutItem>-->
    
    <!--<FlyoutItem Title="Все" Icon="icon_about.png">
        <ShellContent Route="AboutPage" ContentTemplate="{DataTemplate local:MainPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Фильмы" Icon="icon_about.png">
        <ShellContent Route="AboutPage" ContentTemplate="{DataTemplate local:MainPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Сериалы" Icon="icon_about.png">
        <ShellContent Route="AboutPage" ContentTemplate="{DataTemplate local:MainPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Аниме" Icon="icon_about.png">
        <ShellContent Route="AboutPage" ContentTemplate="{DataTemplate local:MainPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Дорамы" Icon="icon_about.png">
        <ShellContent Route="AboutPage" ContentTemplate="{DataTemplate local:MainPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Мультсериалы" Icon="icon_feed.png">
        <ShellContent Route="ItemsPage" ContentTemplate="{DataTemplate local:MainPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Документалки" Icon="icon_feed.png">
        <ShellContent Route="ItemsPage" ContentTemplate="{DataTemplate local:MainPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Мультсериалы" Icon="icon_feed.png">
        <ShellContent Route="ItemsPage" ContentTemplate="{DataTemplate local:MainPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Прочее" Icon="icon_feed.png">
        <ShellContent Route="ItemsPage" ContentTemplate="{DataTemplate local:MainPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Просмотрено" Icon="icon_feed.png">
        <ShellContent Route="ItemsPage" ContentTemplate="{DataTemplate local:MainPage}" />
    </FlyoutItem>
    <FlyoutItem Title="В процессе" Icon="icon_feed.png">
        <ShellContent Route="ItemsPage" ContentTemplate="{DataTemplate local:MainPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Просмотрено" Icon="icon_feed.png">
        <ShellContent Route="ItemsPage" ContentTemplate="{DataTemplate local:MainPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Не начато" Icon="icon_feed.png">
        <ShellContent Route="ItemsPage" ContentTemplate="{DataTemplate local:MainPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Информация" Icon="icon_feed.png">
        <ShellContent Route="ItemsPage" ContentTemplate="{DataTemplate local:MainPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Настройки" Icon="icon_feed.png">
        <ShellContent Route="ItemsPage"  ContentTemplate="{DataTemplate local:MainPage}" />
    </FlyoutItem>-->

    <!--<Button Text="Все" Clicked="OnAllClicked" />
   <Button Text="Фильмы" Clicked="OnMoviesClicked" />
   <Button Text="Сериалы" Clicked="OnSeriesClicked" />
   <Button Text="Аниме" Clicked="OnAnimeClicked" />
   <Button Text="Дорамы" Clicked="OnDoramClicked" />
   <Button Text="Мультсериалы" Clicked="OnMultSeriesClicked" />
   <Button Text="Документалки" Clicked="OnDocumentalClicked" />
   <Button Text="Прочее" Clicked="OnOthersClicked" />

           <Button Text="Просмотрено" Clicked="OnViewedClicked" />
           <Button Text="В процессе" Clicked="OnInProgressClicked" />
           <Button Text="Не начато" Clicked="OnNotStartedClicked" />

           <Button Text="Добавить еще" Clicked="OnAddMoreClicked"  />
           <Button Text="Информация" Clicked="OnUserStatisticsClicked"  />
           <Button Text="Настройки" Clicked="OnSettingsClicked" />-->

    <!-- When the Flyout is visible this will be a menu item you can tie a click behavior to  -->
    <MenuItem Text="Все" StyleClass="MenuItemLayoutStyle" Clicked="OnAllClicked">
    </MenuItem>
    
    <MenuItem Text="Аниме" StyleClass="MenuItemLayoutStyle" Clicked="OnAnimeClicked">
    </MenuItem>

    <MenuItem Text="Фильмы" StyleClass="MenuItemLayoutStyle" Clicked="OnMoviesClicked">
    </MenuItem>

    <MenuItem Text="Сериалы" StyleClass="MenuItemLayoutStyle" Clicked="OnSeriesClicked">
    </MenuItem>

    <MenuItem Text="Дорамы" StyleClass="MenuItemLayoutStyle" Clicked="OnDoramClicked">
    </MenuItem>

    <MenuItem Text="Мультсериалы" StyleClass="MenuItemLayoutStyle" Clicked="OnMultSeriesClicked">
    </MenuItem>

    <MenuItem Text="Документалки" StyleClass="MenuItemLayoutStyle" Clicked="OnDocumentalClicked">
    </MenuItem>

    <MenuItem Text="Прочее" StyleClass="MenuItemLayoutStyle" Clicked="OnOthersClicked">
    </MenuItem>
    <FlyoutItem >
        <ShellContent></ShellContent>
    </FlyoutItem>

    <MenuItem Text="Просмотрено" StyleClass="MenuItemLayoutStyle" Clicked="OnViewedClicked">
    </MenuItem>

    <MenuItem Text="В процессе" StyleClass="MenuItemLayoutStyle" Clicked="OnInProgressClicked">
    </MenuItem>

    <MenuItem Text="Не начато" StyleClass="MenuItemLayoutStyle" Clicked="OnNotStartedClicked">
    </MenuItem>
    <FlyoutItem >
        <ShellContent></ShellContent>
    </FlyoutItem>

    <MenuItem Text="Информация" StyleClass="MenuItemLayoutStyle" Clicked="OnUserStatisticsClicked">
    </MenuItem>

    <MenuItem Text="Настройки" StyleClass="MenuItemLayoutStyle" Clicked="OnSettingsClicked">
    </MenuItem>
  
    <!--
       TabBar lets you define content that won't show up in a flyout menu. When this content is active
       the flyout menu won't be available. This is useful for creating areas of the application where 
       you don't want users to be able to navigate away from. If you would like to navigate to this 
       content you can do so by calling 
       await Shell.Current.GoToAsync("//LoginPage");
   -->


    <!-- Optional Templates 
   // These may be provided inline as below or as separate classes.

   // This header appears at the top of the Flyout.
   // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyout-header
   <Shell.FlyoutHeaderTemplate>
       <DataTemplate>
           <Grid>ContentHere</Grid>
       </DataTemplate>
   </Shell.FlyoutHeaderTemplate>

   // ItemTemplate is for ShellItems as displayed in a Flyout
   // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-flyoutitem-appearance
   <Shell.ItemTemplate>
       <DataTemplate>
           <ContentView>
               Bindable Properties: Title, Icon
           </ContentView>
       </DataTemplate>
   </Shell.ItemTemplate>

   // MenuItemTemplate is for MenuItems as displayed in a Flyout
   // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-menuitem-appearance
   <Shell.MenuItemTemplate>
       <DataTemplate>
           <ContentView>
               Bindable Properties: Text, Icon
           </ContentView>
       </DataTemplate>
   </Shell.MenuItemTemplate>

   -->

</Shell>
